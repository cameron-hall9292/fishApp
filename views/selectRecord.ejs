



<body>
    <div>   
        <span>_id: </span>
        <span id="id" name="id"></span><br />
        <span>body_of_water: </span>
        <span id="water" name="water"></span><br />
        <span>bait: </span>
        <span id="bait" name="bait"></span><br />
        <span>cloudcover: </span>
        <span id="cloudcover" name="cloudcover"></span><br />
        <span>date: </span>
        <span id="date" name="date"></span><br />
        <span>fishtype: </span>
        <span id="fishtype" name="fishtype"></span><br />
        <span>location: </span>
        <span id="location" name="location"></span><br />
        <span>temp: </span>
        <span id="temp" name="temp"></span><br />
        <span>windspeed: </span>
        <span id="windspeed" name="windspeed"></span><br />
        <span>precip: </span>
        <span id="precip" name="precip"></span><br />
        <span>surface pressure: </span>
        <span id="surfacePressure" name="surfacePressure"></span><br />
        <span>img url: </span>
        <span id="imageUrl" name="imageUrl"></span><br />
        <button id="next" onclick="nextRecord()">NEXT</button>
        <button id="back" onclick="goBack()">BACK</button><br><br>


        <form action="/api/updateFish" method="post" id="update">


            <label for="_id">_id:</label>
            <input  type="text" id="_id" name="_id"/><br><br>

         
                <select
                id="bodyOfWater" 
                type="text"
              
                name="body_of_water" 
                placeholder="bait">
             
                </select>
          
                <select
                    id="baitSelect" 
                    type="text"
                  
                    name="baitSelect" 
                    placeholder="bait">
                    </select>
                <select
                    id="fishtypeSelect" 
                    type="text"  
                    name="fishtypeSelect" 
                    placeholder="fish type">
                </select>

              </label>
              <button type="submit">UPDATE</button>
            </form>

            <form action="/api/deleteCatch" method="post" id="delete">

              <label for="catchID">_id:</label>
            <input  type="text" id="catchID" name="catchID"/>

            <button type="submit">DELETE RECORD</button>


            </form>

            <span>number of records: </span>
        <span id="numRecords" name="numRecords"></span><br />

        <a href="addFishType"><button id="addFishType">add a new fish type</button></a>
        <a href="addBait"><button id="addBait">add a new bait</button></a>
        <a href="addBodyWater"><button id="addBodyWater">add a new body of water</button></a>
        <a href="/"><button id="newMain">HOME</button></a><br><br>

        <form action="/single" method="post" enctype="multipart/form-data">
          <label for="anID">anID:</label>
          <input  type="text" id="anID" name="anID"/><br><br>
          <input type="file" name="image" />
          <input type="submit" class="btn btn-default">  
        </form>

        
        <form action="/api/deleteImg" method="post" id="deleteImg">

          <label for="imgId">_id:</label>
        <input  type="text" id="imgId" name="imgId"/>

        <button type="submit">DELETE PIC</button>


        </form>

    </div>


<img src="" alt="picture of fish" id = "pic">


</body>

<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>


//create a journal where catches can be updated and deleted







//define global vars

let record = 0;

let fetchedData = [];

let numRecords = 0;

let records = document.getElementById("numRecords");



console.log(`num records: ${numRecords}`);

const imgId = document.getElementById("imgId");
const anID = document.getElementById("anID");
const idInst = document.getElementById("_id");
const catchID = document.getElementById("catchID");
const id = document.getElementById("id");
const bodyOfWater = document.getElementById("water");
const bait = document.getElementById("bait");
const cloudcover = document.getElementById("cloudcover");
const date = document.getElementById("date");
const fishtype = document.getElementById("fishtype");
const locationLabel = document.getElementById("location");
const temp = document.getElementById("temp");
const windspeed = document.getElementById("windspeed");
const precip = document.getElementById("precip");
const surfacePressure = document.getElementById("surfacePressure");
const image = document.getElementById("imageUrl");
const picture = document.getElementById("pic");




function fetchRecord(){

fetch(`http://localhost:5500/api/fish`) //api for the get request
.then((response) => response.json())
.then((data) => {
fetchedData = data;
console.log(fetchedData);

numRecords = fetchedData.length;
records.innerHTML = numRecords;
console.log(`num records: ${numRecords}`);
})
.then(() => {
displayData();



})
}

fetchRecord();



async function displayData(){

console.log(`record: ${record}`);

let dataLength = fetchedData.length - 1;

console.log(`data length - 1: ${dataLength}`);




id.innerHTML = await fetchedData[record]._id;

let urlId = await fetchedData[record]._id;

//add id element to url so we can use req.params on backend to capture id value

const url = `http://localhost:5500/selectRecord/${urlId}`;

history.replaceState({}, "", url);

//change form action endpoint url and use route param that way

let deleteForm = document.getElementById("deleteImg");

deleteForm.action = `/api/deleteImg/${urlId}`;





idInst.value = await fetchedData[record]._id;

catchID.value = await fetchedData[record]._id;

anID.value = await fetchedData[record]._id;

imgId.value = await fetchedData[record]._id;

bodyOfWater.innerHTML = await fetchedData[record].body_of_water;
 bait.innerHTML = await fetchedData[record].bait
 cloudcover.innerHTML = await fetchedData[record].cloudcover
 date.innerHTML = await fetchedData[record].date
 fishtype.innerHTML = await fetchedData[record].fishtype
 locationLabel.innerHTML = await fetchedData[record].location
 temp.innerHTML = await fetchedData[record].temp
 windspeed.innerHTML = await fetchedData[record].windspeed
 precip.innerHTML = await fetchedData[record].precip
 surfacePressure.innerHTML = await fetchedData[record].surfacePressure
 image.innerHTML = await fetchedData[record].imgUrl;
 picture.src = await fetchedData[record].imgUrl;
}

displayData();


async function nextRecord(){
  if (record === fetchedData.length - 1) {

return

}
else {

record++;
displayData();

}
}

async function goBack(){

  console.log(`record: ${record}`);

if (record === 0) {
    return
}

else {
    
record--;



displayData();
}

}



</script>




<script>




//fetch username data


let userID = document.getElementById("userID");


const fetchUsername = () => {
         fetch(`http://localhost:5500/api/userdata`) //api for the get request
        .then((response) => response.json())
        .then((data) => {
         console.log(data);
        
         //userID.value = data.id;
    
        })

      }

      fetchUsername();


//fetch data from fishlib and add it to the fishtype selection box

let fishLib;

let fishSelect = document.getElementById("fishtypeSelect");

const fetchFishLib = () => {
     fetch(`http://localhost:5500/api/fishtype`) //api for the get request
    .then((response) => response.json())
    .then((data) => {
     console.log(data);
    
     fishLib = data;

    })
    .then(() => {

    // fill fishtype selection box with fishtype data from fishLib collection

    const fishTypeMap = fishLib.map(fishSpecies => {

      var option = document.createElement("option");
    option.text = fishSpecies.fishtype;
    fishSelect.add(option);

    })

  

    })
  }

  fetchFishLib();



// fetch bait data and load it into the bait selection box


let baitLib;

let baitSelect = document.getElementById("baitSelect");

const fetchBaitLib = () => {
     fetch(`http://localhost:5500/api/bait`) //api for the get request
    .then((response) => response.json())
    .then((data) => {
     console.log(data);
    
     baitLib = data;

    })
    .then(() => {

    // fill fishtype selection box with fishtype data from fishLib collection

    const baitTypeMap = baitLib.map(bait => {

      var option = document.createElement("option");
    option.text = bait.bait;
    baitSelect.add(option);

    })

  

    })
  }

  fetchBaitLib();





  // fetch bait data and load it into the bait selection box
  
  
  let waterLib;
  
  let waterSelect = document.getElementById("bodyOfWater");
  
  const fetchWaterLib = () => {
       fetch(`http://localhost:5500/api/bodyofwater`) //api for the get request
      .then((response) => response.json())
      .then((data) => {
       console.log(data);
      
       waterLib = data;
  
      })
      .then(() => {
  
      // fill fishtype selection box with fishtype data from fishLib collection
  
      const bodyOfWaterMap = waterLib.map(water => {
  
        var option = document.createElement("option");
      option.text = water.body_of_water;
      waterSelect.add(option);
  
      })
  
    
  
      })
    }
  
    fetchWaterLib();
  

 
  
  // let BASE_URL = "http://192.168.1.123:5500"
  
  // const form = document.getElementById('update');
  
  // form.addEventListener('submit', async event => {
  //   event.preventDefault();
  
  
  
  // let fish_box = document.getElementById("fishtypeSelect").value
  
  // let bait_box = document.getElementById("baitSelect").value

  // let water_box = document.getElementById("bodyOfWater").value

 
  
  
  //   const postVal = {
  //     user_id: userID.value,
  //     body_of_water: water_box,
  //     fishtype: fish_box,
  //     bait: bait_box,
  //   };

    
  // console.log(postVal);
  //   const submitCatch = await addCatch(postVal);
  //   //updateTodoList(submitFishType);
  // });
  
  
  //   const addCatch = async postVal => {
  //   try {
  //     const response = await axios.post(`${BASE_URL}/api/updateFish`, 
  //      postVal,
  //     { headers: {
  //       'Content-Type': 'application/x-www-form-urlencoded'
      
  //     }
  //   });
  //     const updatedCatch = response.data;
  
  //     alert(`you updated a catch!`, updatedCatch)
  
  //     console.log(`updated a catch!`, updatedCatch);
  
  //     window.location.href = "table";
  
  //     return updatedCatch;
  //   } catch (errors) {
  //     console.error(errors);
  //   }
  // };
      </script>
  